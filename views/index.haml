%img{ :src => '/fda_logo' }

%h1
  daitss
  = Daitss::VERSION
<<<<<<< HEAD
  
=======

%h2 Notice
%p
  As of 1/7/2014, the Florida Digital Archive is operating under <a href='https://fclaweb.fcla.edu/content/interim-fda-operations'> an interim procedure</a>. Online submission has been disabled during this time.

>>>>>>> interim
%hr

%h2
  = "Welcome #{@user.id}"
<<<<<<< HEAD

- if @is_op
  %hr
  %h2 sip summary
  %table
    %tr
      %th count
      %td= Sip.count
    %tr
      %th files
      %td= (Sip.sum :number_of_datafiles )
    %tr
      %th total size
      %td= sprintf('%.2f', Sip.sum(:size_in_bytes).to_i / 1000000) + " MB"
  %hr
  %h2 aip summary
  %table
    %tr
      %th count
      %td= Aip.count - Aip.all(:datafile_count  => 0).count - Aip.all(:datafile_count  => nil).count
    %tr
      %th files
      %td= Aip.sum :datafile_count
    %tr
      %th total size
      %td= sprintf('%.2f', Copy.sum(:size).to_i / 1000000) + " MB"
      
- else
  %h2
    = "SIP summary for user: #{@user.id}"
  %table
    %tr
      %th count
      %td= @user.packages.sips.all.count
    %tr
      %th files
      %td= (@user.packages.sips.all.sum :number_of_datafiles)
    %tr
      %th total size
      %td= sprintf('%.2f', @user.packages.sips.all.sum(:size_in_bytes).to_i / (1024*1024)) + " MB"
  %h2
    = "AIP summary for user: #{@user.id}"
  %table
    %tr
      %th count
      %td= @user.packages.aips.count - @user.packages.aips.all(:datafile_count => 0).count - @user.packages.aips.all(:datafile_count => nil).count
    %tr
      %th files
      %td= @user.packages.aips.all.sum :datafile_count
    %tr
      %th total size
      %td= sprintf('%.2f', @user.packages.aips.copys.all.sum(:size).to_i / (1024*1024)) + " MB"
    
=======
  
>>>>>>> interim
%form{:action => '/logout', :method => 'POST'}
  %input{:type => 'submit', :value => 'logout'}    

  
- if @is_op
  %hr
  %h2 Operator Summary and Breakdown
 
  %table
    %tr
      %th Totals
      %th SIP Count
      %th SIP # Files
      %th SIP Size in MB
      %th AIP Count
      %th AIP # Files
      %th AIP Size in MB
    %tr
      %td 
      %td.dash= Sip.count.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
      %td.dash= (Sip.sum :number_of_datafiles ).to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
      %td.dash= sprintf('%.2f', Sip.sum(:size_in_bytes).to_f / (1024*1024)).reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
      %td.dash= (Aip.count - Aip.all(:datafile_count  => 0).count - Aip.all(:datafile_count  => nil).count).to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
      %td.dash= (Aip.sum :datafile_count).to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
      %td.dash= sprintf('%.2f', Copy.sum(:size).to_f / (1024*1024)).reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
    %tr
      %th Account
      %th Sip Count
      %th # Files
      %th Total Size in MB
      %th Aip Count
      %th # Files
      %th Total Size in MB
    - @sip_data.each do |account|
      %tr
        %td= account.project_account_id
        %td.dash= account.sip_count.to_i.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
        %td.dash= account.file_count.to_i.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
        %td.dash= sprintf('%.2f', account.size.to_f / (1024*1024)).reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
        - @aip_data.each_with_index do |act, i|
          - if act.project_account_id == account.project_account_id
            %td.dash= act.aip_count.to_i.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
            %td.dash= act.file_count.to_i.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
            %td.dash= sprintf('%.2f', act.size.to_f / (1024*1024)).reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
            - break
          - elsif i == @aip_data.size-1
            %td.dash= " "
            %td.dash= " "
            %td.dash= " "
- else
  %h2
    = "SIP summary for account: #{@user.account.id}"
  SIP summary includes all archival submission attempts including rejected packages.  
  %table
    %tr
      %th count
      %td.dash= @user.packages.sips.all.count.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
    %tr
      %th files
      %td.dash= (@user.packages.sips.all.sum :number_of_datafiles).to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
    %tr
      %th total size
      %td.dash= sprintf('%.2f', @user.packages.sips.all.sum(:size_in_bytes).to_f / (1024*1024)).reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse + " MB"
  %h2
    = "AIP summary for account: #{@user.account.id}"
  AIP summary consists of all packages currently archived.
  %table
    %tr
      %th count
      %td.dash= (@user.packages.aips.count - @user.packages.aips.all(:datafile_count => 0).count - @user.packages.aips.all(:datafile_count => nil).count).to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
    %tr
      %th files
      %td.dash= (@user.packages.aips.all.sum :datafile_count).to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
    %tr
      %th total size
      %td.dash= sprintf('%.2f', @user.packages.aips.copys.all.sum(:size).to_f / (1024*1024)).reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse + " MB"
    
