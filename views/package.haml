%h1
  %span.package
    = @package.id
  = ": "

  - if @package.rejected?
    rejected

  - elsif @package.migrated_from_pt?
    see package history below

  - elsif @package.wip

    %a{:href=>"/workspace/#{@package.wip.id}"} ingesting (#{@package.wip.state.to_s.gsub("snafu", "error")})

  - elsif @package.aip and @package.aip.copy == nil
    withdrawn
  - elsif @package.aip and @package.aip.copy
    archived
    - if @package.d1?
      (legacy)

  - else
    aborted

  - if @package.wip and @package.wip.stashed?
    %a{:href=>"/stashspace/#{@package.wip.bin.id}/#{@package.wip.id}"} (stashed)


%table
  %tr
    %th sip name
    %th account
    %th project

  %tr
    %td
      - if @package.sip
        %a{:href => "/packages?search=#{@package.sip.name}"} #{@package.sip.name}
    %td= @package.project.account.id
    %td= @package.project.id

- if @package.batches.any?
  %h2 batches

  %table 
    %tr
      %th
        batch name
    - @package.batches.each do |batch|
      %tr
        %td= batch.id

%h2 events

= partial :events_table, :locals => {:events => @package.normal_events }

- if @package.legacy_events.any?
  %h2 legacy events

  = partial :events_table, :locals => {:events => @package.legacy_events }

%br
- unless @fixity_events
  %a{:href => "/package/#{@package.id}?fixity_events=true"}
    show fixity events
- else
  %a{:href => "/package/#{@package.id}"}
    hide fixity events

  %h2 fixity events

  = partial :events_table, :locals => {:events => @package.fixity_events }

- if @package.rejected?
  %h2 
    reject report

  %a{:href=>"/package/#{@package.id}/reject_report"}
    = "show reject report"
    
  %h2
    reject download
    
  %a{:href=>"/package/#{@package.id}/download_reject"}
    = "download reject report"

- if @ingest_time
  %h2 ingest stats

  %table
    %tr
      %th name
      %th value
    %tr
      %td elapsed time
      %td= @ingest_time

  - aip = @package.aip
 
  - if @package.aip

    #request
      %h2 requests

      - if @package.requests.any?
        %table
          %tr
            %th id
            %th request type
            %th request submitter
            %th note
            %th authorized
            %th status
            %th timestamp
            %th authorize
            %th cancel

          - @package.requests.each do |r|
            %tr
              %td= r.id
              %td= r.type
              %td= r.agent.id
              %td
                %pre&= r.note
              %td= r.is_authorized ? "yes" : "no"
              %td= r.status
              %td= r.timestamp.strftime("%a %b %d %Y %I:%M:%S %p")
              - if r.is_authorized == false and r.status == :enqueued
                %td
                  %form{:action => "/package/#{@package.id}/request/#{r.id}", :method => 'POST'}
                    %input{:type => 'hidden', :name => 'task', :value => 'authorize'}
                    %input{:type => 'submit', :value => 'Authorize'}
              - else
                %td &nbsp;

              - if r.status == :enqueued
                %td
                  %form{:action => "/package/#{@package.id}/request/#{r.id}", :method => 'POST'}
                    %input{:type => 'hidden', :name => 'task', :value => 'delete'}
                    %input{:type => 'submit', :value => 'Cancel'}
                    %input{:name => 'cancel_note'}
              - else
                %td &nbsp;

      - if aip.copy 
        %h2 submit request
        %form{:action => "/package/#{@package.id}/request", :method => 'POST'}
          %select{:name=>'type'}
            - allowed_requests.each do |r|
              %option{:value => r}= r
          %input{:name => 'note'}
          %input{:type => 'submit', :value => 'Request'}

    - last_finished_event = @package.events.last(:name.like => "% finished")
    %h2 aip

    %table
      %tr
        %th title
        %td= @package.intentity.title 
      %tr 
        %th package datafiles
        %td
          %a{:href => "/package/#{@package.id}/datafiles"} view datafiles
        
      %tr
        %th number of datafiles
        %td= aip.datafile_count

      %tr
        %th number of submitted datafiles
        - if @package.sip
          %td= @package.sip.submitted_datafiles
        - else
          %td= 'N/A'  

      - if @package.intentity.volume != ""
        %tr
          %th volume
          %td= @package.intentity.volume

      - if @package.intentity.issue != ""
        %tr
          %th issue
          %td= @package.intentity.issue

      - if @is_op
        %tr
          %th aip descriptor
          %td
            %a{:href=>"/package/#{@package.id}/descriptor"} mets descriptor

      %tr
        %th descriptor errata
        %td
          %pre= aip.xml_errata || 'N/A'

      - if @is_op
        %tr
          %th copy url
          %td
            - if aip.copy
              %a{ :href => aip.copy.url }
                = @package.id + ".tar"
            - else
              N/A
      %tr
        %th report
        %td
          - if last_finished_event.name.eql?("withdraw finished")
            %a{:href=>"/package/#{@package.id}/withdraw_report"}
              = "withdraw report"

          - elsif last_finished_event.name.eql?("d1refresh finished")
            %a{:href=>"/package/#{@package.id}/d1refresh_report"}
              = "d1refresh report"

          - elsif last_finished_event.name.eql?("refresh finished")
            %a{:href=>"/package/#{@package.id}/refresh_report"}
              = "refresh report"

          - elsif last_finished_event.name.eql?("disseminate finished")
            %a{:href=>"/package/#{@package.id}/disseminate_report"}
              = "disseminate report"

          - else 
            %a{:href=>"/package/#{@package.id}/ingest_report"}
              = "ingest report"

      %tr
        %th download report
        %td
          - if last_finished_event.name.eql?("withdraw finished")
            %a{:href=>"/package/#{@package.id}/download_withdraw"}
              = "withdraw report"

          - elsif last_finished_event.name.eql?("d1refresh finished")
            %a{:href=>"/package/#{@package.id}/download_d1refresh"}
              = "download d1refresh"

          - elsif last_finished_event.name.eql?("refresh finished")
            %a{:href=>"/package/#{@package.id}/download_refresh"}
              = "download refresh"

          - elsif last_finished_event.name.eql?("disseminate finished")
            %a{:href=>"/package/#{@package.id}/download_disseminate"}
              = "download disseminate"

          - else 
            %a{:href=>"/package/#{@package.id}/download_ingest"}
              = "download ingest"

      %tr
        %th report stylesheet
        %td
          %a{:href=>"/daitss_report_xhtml.xsl"}
            = "report stylesheet"

      %tr
        %th aip size
        %td= aip.copy ? aip.copy.size : "N/A"

      - if @is_op
        %tr
          %th copy sha1
          %td= aip.copy ? aip.copy.sha1 : "N/A"
        %tr
          %th copy md5
          %td= aip.copy ? aip.copy.md5 : "N/A"

  %h2 dips

  %table
    %tr
 
    - @package.dips.each do |dip|
      %tr
        %td
          %a{:href=>"/package/#{@package.id}/dip/#{dip}"}= dip
