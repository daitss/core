#!/bin/sh
#
### BEGIN INIT INFO
# Provides: daitss
# Required-Start: postgres httpd
# Defalt-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop the DAITSS daemon processes
# Description: DAITSS provides a long-term digital preservation repository. 
### END INIT INFO

DAITSS_CONFIG=/opt/web-services/conf.d/daitss-config.yml

CORE_PATH=/opt/web-services/sites/core/current
CORE_VIRTUAL_HOSTNAME=core.ripple.fcla.edu

DESCRIBE_PATH=/opt/web-services/sites/describe/current
DESCRIBE_VIRTUAL_HOSTNAME=describe.ripple.fcla.edu
DESCRIBE_THIN_CONFIG_PATH_1=/opt/web-services/conf.d/describe1.yml
DESCRIBE_THIN_CONFIG_PATH_2=/opt/web-services/conf.d/describe2.yml

DESCRIBE_PIDFILE_1=/var/run/daitss/describe1.pid
DESCRIBE_PIDFILE_2=/var/run/daitss/describe2.pid
PULSE_PIDFILE=/var/run/daitss/pulse.pid
REPORTER_PIDFILE=/var/run/daitss/reporter.pid

GEM_BIN=/opt/ruby/gem-repos/bin
JAVA_HOME=/usr/java/latest
GEM_HOME=/opt/ruby/gem-repos
RUBY_HOME=/opt/ruby/bin
RUBYOPT=rubygems
TMPDIR=/var/daitss/tmp
DAITSS_LOG=local0.info

log_message() {
  if [ -n "$1" ]
  then
	echo $1
    logger -p $DAITSS_LOG -t DAITSS	$1
  fi
}

pidrunning() {
  if [ -n "$1" ]
  then
    i=`ps -p $1 | grep $1 2> /dev/null | awk '{print $1}'`

    if [ -n "$i" ]
    then
      return $i
    else
      return 0
    fi
  else
    return 0
  fi
}

describe1running() {
  if [ -e "$DESCRIBE_PIDFILE_1" ]
  then
    pidrunning `cat $DESCRIBE_PIDFILE_1`
    running=$?
    if [ "$running" != "0" ]
    then
      return 1
    else 
      rm $DESCRIBE_PIDFILE_1
      return 0
    fi
  else 
    return 0
  fi
}

describe2running() {
  if [ -e "$DESCRIBE_PIDFILE_2" ]
  then
    pidrunning `cat $DESCRIBE_PIDFILE_2`
    running=$?
    if [ "$running" != "0" ]
    then
      return 1
    else
      rm $DESCRIBE_PIDFILE_2
      return 0
    fi
  else
    return 0
  fi
}

pulserunning() {
  if [ -e "$PULSE_PIDFILE" ]
  then
    pidrunning `cat $PULSE_PIDFILE`
    running=$?
    if [ "$running" != "0" ]
    then
      return 1
    else 
      rm $PULSE_PIDFILE
      return 0
    fi
  else 
    return 0
  fi
}

reporterrunning() {
  if [ -e "$REPORTER_PIDFILE" ]
  then
    pidrunning `cat $REPORTER_PIDFILE`
    running=$?
    if [ "$running" != "0" ]
    then
      return 1
    else 
      rm $REPORTER_PIDFILE
      return 0
    fi
  else 
    return 0
  fi
}

startpulse() {
  pulserunning
  if [ $? -eq 1 ]
  then
    log_message "Pulse is already running"
  else
    log_message "Starting pulse..."
    /bin/su daitss -c "cd $CORE_PATH; TMPDIR=$TMPDIR JAVA_HOME=$JAVA_HOME DAITSS_CONFIG=$DAITSS_CONFIG VIRTUAL_HOSTNAME=$CORE_VIRTUAL_HOSTNAME GEM_HOME=$GEM_HOME RUBYOPT=$RUBYOPT PATH="$RUBY_HOME:$GEM_BIN:$PATH" bundle exec ${CORE_PATH}/bin/pulse 2>&1 > /dev/null & echo \$! > $PULSE_PIDFILE"
  fi
}

stoppulse() {
  pulserunning
  if [ "$?" == "0" ]
  then 
    log_message "Pulse is already stopped"
  else
    log_message "Stopping pulse..."
    kill `cat $PULSE_PIDFILE`

    if [ $? -eq 0 ] 
    then
      rm $PULSE_PIDFILE
    else
      log_message "Unable to kill pulse. PID file left intact"
    fi
  fi
}


start() {
  startservices

  startpulse

  reporterrunning
  if [ "$?" == "1" ]
  then
    log_message "Reporter is already running"
  else
    log_message "Starting reporter"
    /bin/su daitss -c "cd $CORE_PATH; TMPDIR=$TMPDIR DAITSS_CONFIG=$DAITSS_CONFIG VIRTUAL_HOSTNAME=$CORE_VIRTUAL_HOSTNAME GEM_HOME=$GEM_HOME RUBYOPT=$RUBYOPT PATH="$RUBY_HOME:$GEM_BIN:$PATH" bundle exec ./bin/mailer-daemon 2>&1 > /dev/null & echo \$! > $REPORTER_PIDFILE"
  fi
}

stop() {
  log_message "Stopping apache services..."
  /etc/init.d/httpd stop > /dev/null

  log_message "Stopping describe..."
  /bin/su daitss -c "cd $DESCRIBE_PATH; PATH="$RUBY_HOME:$GEM_BIN:$PATH" DAITSS_CONFIG=$DAITSS_CONFIG VIRTUAL_HOSTNAME=$DESCRIBE_VIRTUAL_HOSTNAME RUBYOPT=$RUBYOPT GEM_HOME=$GEM_HOME JAVA_HOME=$JAVA_HOME bundle exec thin -C $DESCRIBE_THIN_CONFIG_PATH_1 -d stop"

  /bin/su daitss -c "cd $DESCRIBE_PATH; PATH="$RUBY_HOME:$GEM_BIN:$PATH" DAITSS_CONFIG=$DAITSS_CONFIG VIRTUAL_HOSTNAME=$DESCRIBE_VIRTUAL_HOSTNAME RUBYOPT=$RUBYOPT GEM_HOME=$GEM_HOME JAVA_HOME=$JAVA_HOME bundle exec thin -C $DESCRIBE_THIN_CONFIG_PATH_2 -d stop"

  stoppulse

  reporterrunning
  if [ "$?" == "0" ]
  then
    log_message "Reporter is already stopped"
  else 
    log_message "Stopping reporter..."
    kill `cat $REPORTER_PIDFILE`

    if [ $? -eq 0 ] 
    then
      rm $REPORTER_PIDFILE
    else
      log_message "Unable to kill reporter. PID file left intact"
    fi
  fi
}

status() {
  httpd_running=`/etc/init.d/httpd status`

  if [ "$httpd_running" != "httpd is stopped" ]
  then
    log_message "Apache is running"
  else
    log_message "Apache is not running"
  fi

  describe1running
  if [ "$?" == "1" ]
  then
    log_message "Description service 1 is running"
  else
    log_message "Description service 1 is not running"
  fi

 describe2running
  if [ "$?" == "1" ]
  then
    log_message "Description service 2 is running"
  else
    log_message "Description service 2 is not running"
  fi

  pulserunning
  if [ "$?" == "1" ]
  then
    log_message "Pulse is running"
  else
    log_message "Pulse is not running"
  fi

  reporterrunning
  if [ "$?" == "1" ]
  then
    log_message "Reporter is running"
  else
    log_message "Reporter is not running"
  fi
}

graceful() {
  log_message "Gracefully restarting apache..."
  /etc/init.d/httpd graceful
  stoppulse
  startpulse
}

startservices() {
  httpd_running=`/etc/init.d/httpd status`

  if [ "$httpd_running" != "httpd is stopped" ]
  then
    log_message "Apache services are already running"
  else
    log_message "Starting apache services..."
    /etc/init.d/httpd start > /dev/null
  fi 

  describe1running
  if [ "$?" == "1" ]
  then
    log_message "Description service 1 is already running"
  else
    log_message "Starting description service 1..."
    /bin/su daitss -c "cd $DESCRIBE_PATH; TMPDIR=$TMPDIR PATH="$RUBY_HOME:$GEM_BIN:$PATH" DAITSS_CONFIG=$DAITSS_CONFIG VIRTUAL_HOSTNAME=$DESCRIBE_VIRTUAL_HOSTNAME RUBYOPT=$RUBYOPT GEM_HOME=$GEM_HOME JAVA_HOME=$JAVA_HOME bundle exec thin -C $DESCRIBE_THIN_CONFIG_PATH_1 -d start"
  fi

  describe2running
  if [ "$?" == "1" ]
  then
    log_message "Description service 2 is already running"
  else
    log_message "Starting description service 2..."
    /bin/su daitss -c "cd $DESCRIBE_PATH; TMPDIR=$TMPDIR PATH="$RUBY_HOME:$GEM_BIN:$PATH" DAITSS_CONFIG=$DAITSS_CONFIG VIRTUAL_HOSTNAME=$DESCRIBE_VIRTUAL_HOSTNAME RUBYOPT=$RUBYOPT GEM_HOME=$GEM_HOME JAVA_HOME=$JAVA_HOME bundle exec thin -C $DESCRIBE_THIN_CONFIG_PATH_2 -d start"
  fi

}

guiredirect() {
  httpd_running=`/etc/init.d/httpd status`

  if [ "$httpd_running" != "httpd is stopped" ]
  then
    log_message "Apache services is running, GUI redirect aborted!"
  else
    log_message "Apached is stopped, GUI redirecting..."
	/usr/sbin/httpd -f /opt/daitss-down/conf/httpd.conf
  fi
}

stopguiredirect() {
  log_message "Stopping GUI redirect..."	
  /sbin/service httpd stop
  sleep 1

  httpd_running=`/etc/init.d/httpd status`	
  if [ "$httpd_running" != "httpd is stopped" ]
  then
    log_message "Apache for GUI redirect is still running!"
  else
    log_message "GUI redirect is stopped"
  fi
}

case "$1" in
  start)
  start
  ;;
  stop)
  stop
  ;;
  status)
  status
  ;;
  restart|reload|condrestart)
  stop
  start
  ;;
  start-pulse)
  startpulse
  ;;
  stop-pulse)
  stoppulse
  ;;
  graceful)
  graceful
  ;;
  start-services)
  startservices
  ;;
  gui-redirect)
  guiredirect
  ;;
  stop-gui-redirect)
  stopguiredirect
  ;;
  *)
  log_message $"Usage: $0 {start|stop|restart|reload|status|start-pulse|stop-pulse|graceful|start-services|gui-redirect|stop-gui-redirect}"
  exit 1
esac

exit 0

