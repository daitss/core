#!/usr/bin/env ruby

# reads IEIDs from a file and adds them to a D2 batch

require 'rubygems'
require 'bundler/setup'
require 'daitss'

include Daitss

load_archive

def error msg
  STDERR.puts msg
  exit 1
end

unless ARGV[0] and ARGV[1]
  error "Usage: refresh-batch BATCH_NAME FILE_NAME"
else
  file = ARGV[1]
  batch_name = ARGV[0]
end

error "#{file} does not exist or is not a file" unless File.file? file
error "A batch with name #{batch_name} already exists" if Batch.get(batch_name)

b = Batch.new :id => batch_name
b.save or error "Could not save batch with name #{batch_name}"

# figure out the number of lines
ieids = File.open("test1", "r").read.split(" ")

line_num = 0
added = 0
skipped = 0
ieids.each do |ieid|
  line_num += 1

  puts "Attempting to add #{ieid} to batch #{batch_name} (#{line_num}/#{ieids.size})"
  p = repository(:default).adapter.select("SELECT * FROM packages where id = '#{ieid}'")

  unless p.length == 1
    puts "    #{ieid} does not denote a valid package, skipping" 
    skipped += 1
    next
  end

  repository(:default).adapter.execute("INSERT INTO batch_assignments (batch_id, package_id) VALUES ('#{b.id}', '#{ieid}')")

  added += 1
  puts "    #{ieid} added to batch #{batch_name}" 
  b.save
end

puts "\nPackages added to batch #{batch_name}: #{added}\nPackages skipped: #{skipped}"
 
