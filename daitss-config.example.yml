
# This is an example of the DAITSS configuration file restricted to
# the data necessary to run the core service.
#
# You must set up your web server to set the environment variable
# DAITSS_CONFIG to point to a configuration file along these lines,
# though typically it will have sections for many services in addition
# to this one.
#
# Please don't use tabs in this file.

defaults:

database:
     daitss_db: postgres://user:pass@host/database    

#   We normally name sections after the virtual hostname used by an
#   applcation (this is so one physical host can run multiple services
#   of the same kind).  An application's configuration code typically
#   checks the VIRTUAL_HOSTNAME environment variable to determine the
#   appropriate section to load.  Typically VIRTUAL_HOSTNAME is set in
#   the same place that the DAITSS_CONFIG environment is set.

core.example.org:
    log_syslog_facility:         LOG_LOCAL0
    log_filename:                core.log

    submit_log_directory:        /path/to/submit/log
    pulse_log_filename:          /path/to/pulse/logfile
    mailer_log_filename:         /path/to/mailer/logfile
    mailer_reply_to:             email_addr_of_repyto_in_emails
    mailer_smtp_host:            smtp.ufl.edu

    data_dir:                    /var/daitss/data

    uri_prefix:                  daitss-test://
    http_timeout:                600
    storage_download_timeout:    600

    actionplan_url:              http://url/to/actionplan

    #   There are two methods for core to communicate with the describe service, http POST for file upload or GET for file url.
    #   if describe service is running on a remote server (remote = true), core will use http POST to upload file to the
    #   remote service.  Otherwise (remote = false), core will use http GET with file url for efficiency and saving time in
    #   file copying and network transmission.
    describe_service:
        remote:                  true/false
        url:                     http://url/to/describe
    storage_url:                 http://url/to/storemaster
    viruscheck_url:              http://url/to/viruscheck

    #   There are two methods for core to communicate with the transformation service, http POST for file upload or GET for file url.
    #   if transformation service is running on a remote server (remote = true), core will use http POST to upload file to the
    #   remote service.  Otherwise (remote = false), core will use http GET with file url for efficiency and saving time in
    #   file copying and network transmission.  
    #   skip_undefined = true: daitss would skip the undefined transformation identifier (default) and thus won't snafu
    transform_service:              
        remote:                  true/false
        url:                     http://url/to/transform
        skip_undefined:          true/false
    xmlresolution_url:           http://url/to/xmlresolution

    ingest_throttle:             2
    dissemination_throttle:      2
    withdrawal_throttle:         1
    queueing_discipline:         lifo

    smtp_server:                 smtp.ufl.edu

    jvm_options:
    - -Dhttp.proxyHost=sake.fcla.edu
    - -Dhttp.proxyPort=3128
    - -Xms2G
    - -Xmx2G

# database:daitss_db
# -----------------------
# Database URL to the daitss database (typically postgres)
#

# core:log_syslog_facility
# -------------------------------
# If set, direct log information to this syslog facility (see
# /etc/syslog.conf). If neither log_filename nor log_syslog_facility
# are set, log to STDERR.
#
# core:log_filename
# -------------------------------
# If set, direct log information to this file. If neither log_filename
# nor log_syslog_facility are set, log to STDERR.
##
#
# core:log_filename
# -------------------------------
# core:submit_log_directory
# Path to write commandline submit logfiles to
#
# core:pulse_log_filename
# File to write pulse log to
#
# core:mailer_log_filename
# File to write mailer log to
#
# core:data_dir
# --------------------------
# Filesystem path to the daitss data directory
#
# core:uri_prefix
# --------------------------
# Prefix to apply to the beginning of URIs created by DAITSS
# 
# core:http_timeout
# --------------------------
# Amount of time in seconds to wait for a per-file processing http request to complete
#
# core:storage_download_timeout
# --------------------------
# Amount of time in seconds to wait for a GET http request to storage to complete
#
# core:actionplan_url
# --------------------------
# HTTP URL of actionplan service
#
# core:describe_url
# --------------------------
# HTTP URL of describe service
#
# core:storage_url
# --------------------------
# HTTP URL of storemaster service
#
# core:viruscheck_url
# --------------------------
# HTTP URL of viruscheck service
#
# core:transform_url
# --------------------------
# HTTP URL of transformation service
#
# core:xmlresolution_url
# --------------------------
# HTTP URL of xmlresolution service
#
# core:ingest-throttle
# --------------------------
# maximum number of concurrent ingest tasks to run at once
#
# core:dissemination-throttle
# --------------------------
# maximum number of concurrent dissemination tasks to run at once
#
# core:withdrawal-throttle
# --------------------------
# maximum number of concurrent withdrawal tasks to run at once
#
# core:queueing-discipline
# --------------------------
# Valid values (lifo, fifo) order jobs are picked up to either Last In First Out (lifo) or First In First Out (fifo)
#
# core:smtp-server
# --------------------------
# URL to outgoing mail server
#
# core:jvm-options
# --------------------------
# Java options to pass to validator
